name: Deploy Services

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24.1'

    - name: Install dependencies
      run: go mod download

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...

    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
        only-new-issues: true

  deploy-bot:
    needs: lint-and-test
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    steps:
    - uses: actions/checkout@v3

    - name: Build Bot Docker image
      run: docker build -t amareh-bot -f docker/Dockerfile.bot .

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Push Bot to GitHub Container Registry
      run: |
        docker tag amareh-bot ghcr.io/${{ github.repository }}/amareh-bot:latest
        docker push ghcr.io/${{ github.repository }}/amareh-bot:latest

  deploy-webapp:
    needs: lint-and-test
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    steps:
    - uses: actions/checkout@v3

    - name: Build WebApp Docker image
      run: docker build -t amareh-webapp -f docker/Dockerfile.webapp .

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Push WebApp to GitHub Container Registry
      run: |
        docker tag amareh-webapp ghcr.io/${{ github.repository }}/amareh-webapp:latest
        docker push ghcr.io/${{ github.repository }}/amareh-webapp:latest
